import { Plugin, Notice } from "obsidian";
import { exec, ChildProcessWithoutNullStreams } from "child_process";
import * as fs from "fs";
import * as path from "path";

export default class TelegramReminderPlugin extends Plugin {
  botProcess: ChildProcessWithoutNullStreams | null = null;

  async onload() {
    await this.copyMainPyIfMissing();

    this.addCommand({
      id: "start-telegram-bot",
      name: "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram-–±–æ—Ç–∞",
      callback: () => this.runPythonBot(),
    });

    this.addCommand({
      id: "stop-telegram-bot",
      name: "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Telegram-–±–æ—Ç–∞",
      callback: () => this.stopPythonBot(),
    });

    this.addRibbonIcon("bell", "–ó–∞–ø—É—Å—Ç–∏—Ç—å Telegram-–±–æ—Ç–∞", () => this.runPythonBot());
  }

  async copyMainPyIfMissing() {
    const vaultPath = this.app.vault.adapter.basePath;
    const dest = path.join(vaultPath, "main.py");
    const src = path.join((this as any).manifest.dir, "main.py");

    if (!fs.existsSync(dest)) {
      try {
        fs.copyFileSync(src, dest);
        new Notice("‚úÖ main.py —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ—Ä–µ–Ω—å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞");
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è main.py", e);
        new Notice("‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è main.py");
      }
    }
  }

  runPythonBot() {
    if (this.botProcess) {
      new Notice("‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω");
      return;
    }
    const vaultPath = this.app.vault.adapter.basePath;
    const python = process.platform === "win32" ? "python" : "python3";
    this.botProcess = exec(`${python} main.py`, { cwd: vaultPath });

    this.botProcess.stdout.on("data", (data) => console.log("[bot]", data.toString()));
    this.botProcess.stderr.on("data", (data) => console.error("[bot.err]", data.toString()));
    this.botProcess.on("exit", (code) => {
      this.botProcess = null;
      console.log("[bot] exited", code);
      new Notice("üî¥ Telegram-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    });

    new Notice("üöÄ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω");
  }

  stopPythonBot() {
    if (this.botProcess) {
      this.botProcess.kill();
      this.botProcess = null;
      new Notice("üî¥ Telegram-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
    } else {
      new Notice("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω");
    }
  }

  onunload() {
    this.stopPythonBot();
  }
}
